;;; Compiled snippets and support files for `javascript-jquery-mode'
;;; Snippet definitions:
;;;
(yas-define-snippets 'javascript-jquery-mode
                     '(("wrap" "${1:obj}.wrap('${2:&lt;div class=\"extra-wrapper\"&gt;&lt;/div&gt;}')" "wrap" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/wrap" nil nil)
                       ("width" "${1:obj}.width(${2:integer})" "width" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/width" nil nil)
                       ("val" "${1:obj}.val('${2:text}')" "val" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/val" nil nil)
                       ("unwrap" "${1:obj}.unwrap()" "unwrap" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/unwrap" nil nil)
                       ("unload" "${1:obj}.unload(function (${2:e}) {\n	${0:// event handler}\n});" "unload" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/unload" nil nil)
                       ("uniq" "$.unique(${1:array})" "uniq" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/uniq" nil nil)
                       ("undele" "${1:obj}.undelegate(${2:selector expression}, ${3:event}, ${4:handler})" "undele" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/undele" nil nil)
                       ("unbind" "${1:obj}.unbind('${2:event name}')" "unbind" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/unbind" nil nil)
                       ("trigh" "${1:obj}.triggerHandler('${2:event name}')" "trigh" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/trigh" nil nil)
                       ("trig" "${1:obj}.trigger('${2:event name}')" "trig" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/trig" nil nil)
                       ("togsh" "${1:obj}.toggle('${2:slow/400/fast}')" "togsh" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/togsh" nil nil)
                       ("togclass" "${1:obj}.toggleClass('${2:class name}')" "togclass" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/togclass" nil nil)
                       ("tog" "${1:obj}.toggle(function (${2:e}) {\n	${3:// event handler}\n}, function ($2) {\n	${4:// event handler}\n});\n$0" "tog" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/tog" nil nil)
                       ("toarr" "${0:obj}.toArray()" "toarr" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/toarr" nil nil)
                       ("this" "$(this)" "this" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/this" nil nil)
                       ("text" "${1:obj}.text(${2:'some text'})" "text" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/text" nil nil)
                       ("supc" "${1:obj}.slideUp('${2:slow/400/fast}', function () {\n	${0:// callback};\n});" "supc" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/supc" nil nil)
                       ("sup" "${1:obj}.slideUp('${2:slow/400/fast}')" "sup" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/sup" nil nil)
                       ("submit" "${1:obj}.submit(function (${2:e}) {\n	${0:// event handler}\n});" "submit" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/submit" nil nil)
                       ("stop" "${1:obj}.stop('${2:queue}', ${3:false}, ${4:false})" "stop" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/stop" nil nil)
                       ("stoggle" "${1:obj}.slideToggle('${2:slow/400/fast}')" "stoggle" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/stoggle" nil nil)
                       ("slice" "${1:obj}.slice(${2:start}${3:, end})" "slice" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/slice" nil nil)
                       ("size" "${1:obj}.size()" "size" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/size" nil nil)
                       ("sib" "${1:obj}.siblings('${2:selector expression}')" "sib" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/sib" nil nil)
                       ("showc" "${1:obj}.show('${2:slow/400/fast}', function () {\n	${0:// callback}\n});" "showc" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/showc" nil nil)
                       ("show" "${1:obj}.show('${2:slow/400/fast}')" "show" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/show" nil nil)
                       ("serializea" "${1:obj}.serializeArray()" "serializea" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/serializea" nil nil)
                       ("serialize" "${1:obj}.serialize()" "serialize" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/serialize" nil nil)
                       ("select" "${1:obj}.select(function (${2:e}) {\n	${0:// event handler}\n});" "select" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/select" nil nil)
                       ("sdownc" "${1:obj}.slideDown('${2:slow/400/fast}', function () {\n	${0:// callback};\n});" "sdownc" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/sdownc" nil nil)
                       ("sdown" "${1:obj}.slideDown('${2:slow/400/fast}')" "sdown" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/sdown" nil nil)
                       ("scrollt" "${1:obj}.scrollTop(${2:value})" "scrollt" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/scrollt" nil nil)
                       ("scrolll" "${1:obj}.scrollLeft(${2:value})" "scrolll" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/scrolll" nil nil)
                       ("scroll" "${1:obj}.scroll(function (${2:e}) {\n	${0:// event handler}\n});" "scroll" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/scroll" nil nil)
                       ("resize" "${1:obj}.resize(function (${2:e}) {\n	${0:// event handler}\n});" "resize" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/resize" nil nil)
                       ("reset" "${1:obj}.reset(function (${2:e}) {\n	${0:// event handler}\n});" "reset" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/reset" nil nil)
                       ("repw" "${1:obj}.replaceWith(${2:content})" "repw" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/repw" nil nil)
                       ("repa" "${1:obj}.replaceAll(${2:target})" "repa" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/repa" nil nil)
                       ("remp" "${1:obj}.removeProp('${2:property name}')" "remp" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/remp" nil nil)
                       ("remdd" "$.removeData(${1:element}${2:, 'key name}')" "remdd" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/remdd" nil nil)
                       ("remd" "${1:obj}.removeData('${2:key name}')" "remd" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/remd" nil nil)
                       ("remc" "${1:obj}.removeClass('${2:class name}')" "remc" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/remc" nil nil)
                       ("rema" "${1:obj}.removeAttr('${2:attribute name}')" "rema" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/rema" nil nil)
                       ("rem" "${1:obj}.remove()" "rem" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/rem" nil nil)
                       ("ready" "$(function () {\n	$0\n});" "ready" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/ready" nil nil)
                       ("queuee" "$.queue(${1:element}${2:, name}${3:, newQueue})" "queuee" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/queuee" nil nil)
                       ("queue" "${1:obj}.queue(${2:name}${3:, newQueue})" "queue" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/queue" nil nil)
                       ("pushstack" "${1:obj}.pushStack(${2:elements})" "pushstack" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/pushstack" nil nil)
                       ("proxy" "$.proxy(${1:function}, ${2:this})" "proxy" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/proxy" nil nil)
                       ("prop" "${1:obj}.prop('${2:property name}')" "prop" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/prop" nil nil)
                       ("promise" "${1:obj}.promise(${2:'fx'}, ${3:target})" "promise" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/promise" nil nil)
                       ("prevu" "${1:obj}.prevUntil('${2:selector expression}'${3:, 'filter expression'})" "prevu" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/prevu" nil nil)
                       ("preva" "${1:obj}.prevAll('${2:selector expression}')" "preva" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/preva" nil nil)
                       ("prev" "${1:obj}.prev('${2:selector expression}')" "prev" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/prev" nil nil)
                       ("prependto" "${1:obj}.prependTo('${2:selector expression}')" "prependto" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/prependto" nil nil)
                       ("prepend" "${1:obj}.prepend('${2:Some text <b>and bold!</b>}')" "prepend" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/prepend" nil nil)
                       ("pos" "${1:obj}.position()" "pos" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/pos" nil nil)
                       ("parsexml" "$.parseXML(${1:data})" "parsexml" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/parsexml" nil nil)
                       ("parsejson" "$.parseJSON(${1:data})" "parsejson" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/parsejson" nil nil)
                       ("parentsu" "${1:obj}.parentsUntil('${2:selector expression}'${3:, 'filter expression'})" "parentsu" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/parentsu" nil nil)
                       ("parents" "${1:obj}.parents('${2:selector expression}')" "parents" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/parents" nil nil)
                       ("parent" "${1:obj}.parent('${2:selector expression}')" "parent" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/parent" nil nil)
                       ("param" "$.param(${1:obj})" "param" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/param" nil nil)
                       ("outerw" "${1:obj}.outerWidth()" "outerw" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/outerw" nil nil)
                       ("outerh" "${1:obj}.outerHeight()" "outerh" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/outerh" nil nil)
                       ("one" "${1:obj}.one('${2:event name}', function (${3:e}) {\n	${0:// event handler}\n});" "one" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/one" nil nil)
                       ("on" "${1:obj}.on('${2:events}', '${3:selector expression}', function (${4:e}) {\n	${0:// event handler}\n});" "on" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/on" nil nil)
                       ("offsetp" "${1:obj}.offsetParent()" "offsetp" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/offsetp" nil nil)
                       ("offset" "${1:obj}.offset()" "offset" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/offset" nil nil)
                       ("off" "${1:obj}.off('${2:events}', '${3:selector expression}'${4:, handler})" "off" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/off" nil nil)
                       ("not" "${1:obj}.not('${2:selector expression}')" "not" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/not" nil nil)
                       ("nextu" "${1:obj}.nextUntil('${2:selector expression}'${3:, 'filter expression'})" "nextu" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/nextu" nil nil)
                       ("nexta" "${1:obj}.nextAll('${2:selector expression}')" "nexta" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/nexta" nil nil)
                       ("next" "${1:obj}.next('${2:selector expression}')" "next" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/next" nil nil)
                       ("mup" "${1:obj}.mouseup(function (${2:e}) {\n	${0:// event handler}\n});" "mup" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/mup" nil nil)
                       ("mover" "${1:obj}.mouseover(function (${2:e}) {\n	${0:// event handler}\n});" "mover" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/mover" nil nil)
                       ("mout" "${1:obj}.mouseout(function (${2:e}) {\n	${0:// event handler}\n});" "mout" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/mout" nil nil)
                       ("mmove" "${1:obj}.mousemove(function (${2:e}) {\n	${0:// event handler}\n});" "mmove" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/mmove" nil nil)
                       ("mleave" "${1:obj}.mouseleave(function (${2:e}) {\n	${0:// event handler}\n});" "mleave" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/mleave" nil nil)
                       ("merge" "$.merge(${1:target}, ${0:original});" "merge" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/merge" nil nil)
                       ("menter" "${1:obj}.mouseenter(function (${2:e}) {\n	${0:// event handler}\n});" "menter" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/menter" nil nil)
                       ("mdown" "${1:obj}.mousedown(function (${2:e}) {\n	${0:// event handler}\n});" "mdown" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/mdown" nil nil)
                       ("mapp" "$.map(${1:arrayOrObject}, function (${2:value}, ${3:indexOrKey}) {\n	${0:// callback}\n});" "mapp" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/mapp" nil nil)
                       ("map" "${1:obj}.map(function (${2:index}, ${3:element}) {\n	${0:// callback}\n});" "map" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/map" nil nil)
                       ("makearray" "$.makeArray(${0:obj});" "makearray" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/makearray" nil nil)
                       ("loadf" "${1:obj}.load('${2:mydomain.com/url}',\n	${2:{ param1: value1 },}\n	function (responseText, textStatus, xhr) {\n		${0:// success callback}\n	}\n});" "loadf" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/loadf" nil nil)
                       ("load" "${1:obj}.load(function (${2:e}) {\n	${0:// event handler}\n});" "load" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/load" nil nil)
                       ("live" "${1:obj}.live('${2:events}', function (${3:e}) {\n	${0:// event handler}\n});" "live" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/live" nil nil)
                       ("last" "${1:obj}.last('${1:selector expression}')" "last" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/last" nil nil)
                       ("kup" "${1:obj}.keyup(function (${2:e}) {\n	${0:// event handler}\n});" "kup" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/kup" nil nil)
                       ("kpress" "${1:obj}.keypress(function (${2:e}) {\n	${0:// event handler}\n});" "kpress" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/kpress" nil nil)
                       ("kdown" "${1:obj}.keydown(function (${2:e}) {\n	${0:// event handler}\n});" "kdown" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/kdown" nil nil)
                       ("jj" "$('${1:selector}')" "jj" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/jj" nil nil)
                       ("isxml" "$.isXMLDoc(${1:node})" "isxml" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/isxml" nil nil)
                       ("iswin" "$.isWindow(${1:obj})" "iswin" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/iswin" nil nil)
                       ("isobj" "$.isPlainObject(${1:obj})" "isobj" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/isobj" nil nil)
                       ("isnum" "$.isNumeric(${1:value})" "isnum" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/isnum" nil nil)
                       ("isfunc" "$.isFunction(${1:obj})" "isfunc" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/isfunc" nil nil)
                       ("isempty" "$.isEmptyObject(${1:obj})" "isempty" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/isempty" nil nil)
                       ("isarr" "$.isArray(${1:obj})" "isarr" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/isarr" nil nil)
                       ("is" "${1:obj}.is('${2:selector expression}')" "is" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/is" nil nil)
                       ("insb" "${1:obj}.insertBefore('${2:selector expression}')" "insb" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/insb" nil nil)
                       ("insa" "${1:obj}.insertAfter('${2:selector expression}')" "insa" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/insa" nil nil)
                       ("inarr" "$.inArray(${1:value}, ${0:array});" "inarr" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/inarr" nil nil)
                       ("html" "${1:obj}.html('${2:Some text <b>and bold!</b>}')" "html" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/html" nil nil)
                       ("hover" "${1:obj}.hover(function (${2:e}) {\n	${3:// event handler}\n}, function ($2) {\n	${4:// event handler}\n});" "hover" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/hover" nil nil)
                       ("hidec" "${1:obj}.hide('${2:slow/400/fast}', function () {\n	${0:// callback}\n});" "hidec" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/hidec" nil nil)
                       ("hide" "${1:obj}.hide('${2:slow/400/fast}')" "hide" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/hide" nil nil)
                       ("height" "${1:obj}.height(${2:integer})" "height" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/height" nil nil)
                       ("hasd" "$.hasData('${0:selector expression}');" "hasd" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/hasd" nil nil)
                       ("hasc" "${1:obj}.hasClass('${2:className}')" "hasc" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/hasc" nil nil)
                       ("grep" "$.grep(${1:array}, function (item, index) {\n	$2\n}${0:, true});" "grep" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/grep" nil nil)
                       ("getscript" "$.getScript('${1:mydomain.com/url}', function (script, textStatus, jqXHR) {\n	${0:// callback}\n});" "getscript" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/getscript" nil nil)
                       ("getjson" "$.getJSON('${1:mydomain.com/url}',\n	${2:{ param1: value1 },}\n	function (data, textStatus, jqXHR) {\n		${0:// success callback}\n	}\n);" "getjson" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/getjson" nil nil)
                       ("get" "${1:obj}.get(${2:element index})" "get" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/get" nil nil)
                       ("focusout" "${1:obj}.focusOut(function (${2:e}) {\n	${0:// event handler}\n});" "focusout" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/focusout" nil nil)
                       ("focusin" "${1:obj}.focusIn(function (${2:e}) {\n	${0:// event handler}\n});" "focusin" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/focusin" nil nil)
                       ("focus" "${1:obj}.focus(function (${2:e}) {\n	${0:// event handler}\n});" "focus" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/focus" nil nil)
                       ("find" "${1:obj}.find('${2:selector expression}')" "find" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/find" nil nil)
                       ("filtert" "${1:obj}.filter(function (${2:index}) {\n	$3\n})" "filtert" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/filtert" nil nil)
                       ("filter" "${1:obj}.filter('${2:selector expression}')" "filter" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/filter" nil nil)
                       ("fadetoc" "${1:obj}.fadeTo('slow/400/fast', ${2:0.5}, function () {\n	${0:// callback};\n});" "fadetoc" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/fadetoc" nil nil)
                       ("fadeto" "${1:obj}.fadeTo('${2:slow/400/fast}', ${3:0.5})" "fadeto" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/fadeto" nil nil)
                       ("fadeoutc" "${1:obj}.fadeOut('slow/400/fast', function () {\n	${0:// callback};\n});" "fadeoutc" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/fadeoutc" nil nil)
                       ("fadeout" "${1:obj}.fadeOut('${2:slow/400/fast}')" "fadeout" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/fadeout" nil nil)
                       ("fadeinc" "${1:obj}.fadeIn('slow/400/fast', function () {\n	${0:// callback};\n});" "fadeinc" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/fadeinc" nil nil)
                       ("fadein" "${1:obj}.fadeIn('${2:slow/400/fast}')" "fadein" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/fadein" nil nil)
                       ("extend" "$.extend(${1:true, }${2:target}, ${3:obj})" "extend" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/extend" nil nil)
                       ("eventsmap" "{\n	:f$0\n}" "eventsmap" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/eventsmap" nil nil)
                       ("error" "${1:obj}.error(function (${2:e}) {\n	${0:// event handler}\n});" "error" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/error" nil nil)
                       ("eq" "${1:obj}.eq(${2:element index})" "eq" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/eq" nil nil)
                       ("end" "${1:obj}.end()" "end" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/end" nil nil)
                       ("empty" "${1:obj}.empty()" "empty" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/empty" nil nil)
                       ("eltrim" "$.trim('${1:string}')" "eltrim" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/eltrim" nil nil)
                       ("el" "$('<$1/>'${2:, {}})" "el" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/el" nil nil)
                       ("each" "${1:obj}.each(function (index) {\n	${0:this.innerHTML = this + \" is the element, \" + index + \" is the position\";}\n});" "each" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/each" nil nil)
                       ("die" "${1:obj}.die(${2:event}, ${3:handler})" "die" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/die" nil nil)
                       ("detach" "${1:obj}.detach('${2:selector expression}')" "detach" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/detach" nil nil)
                       ("deqq" "$.dequeue('${1:selector expression}'${2:, 'queue name'})" "deqq" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/deqq" nil nil)
                       ("deq" "${1:obj}.dequeue(${2:'queue name'})" "deq" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/deq" nil nil)
                       ("dele" "${1:obj}.delegate('${2:selector expression}', '${3:event name}', function (${4:e}) {\n	${0:// event handler}\n});" "dele" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/dele" nil nil)
                       ("delay" "${1:obj}.delay('${2:slow/400/fast}'${3:, 'queue name'})" "delay" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/delay" nil nil)
                       ("dblclick" "${1:obj}.dblclick(function (${2:e}) {\n	${0:// event handler}\n});" "dblclick" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/dblclick" nil nil)
                       ("dataa" "$.data('${1:selector expression}', '${2:key}'${3:, 'value'})" "dataa" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/dataa" nil nil)
                       ("data" "${1:obj}.data(${2:obj})" "data" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/data" nil nil)
                       ("cssm" "${1:obj}.css({${2:attribute1}: '${3:value1}', ${4:attribute2}: '${5:value2}'})" "cssm" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/cssm" nil nil)
                       ("csshooks" "$.cssHooks['${1:CSS prop}'] = {\n	get: function (elem, computed, extra) {\n		${2: // handle getting the CSS property}\n	},\n	set: function (elem, value) {\n		${0: // handle setting the CSS value}\n	}\n};" "csshooks" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/csshooks" nil nil)
                       ("css" "${1:obj}.css('${2:attribute}', '${3:value}')" "css" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/css" nil nil)
                       ("contains" "$.contains(${1:container}, ${0:contents});" "contains" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/contains" nil nil)
                       ("clone" "${1:obj}.clone()" "clone" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/clone" nil nil)
                       ("click" "${1:obj}.click(function (${2:e}) {\n	${0:// event handler}\n});" "click" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/click" nil nil)
                       ("clearq" "${1:obj}.clearQueue(${2:'queue name'})" "clearq" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/clearq" nil nil)
                       ("children" "${1:obj}.children('${2:selector expression}')" "children" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/children" nil nil)
                       ("change" "${1:obj}.change(function (${2:e}) {\n	${0:// event handler}\n});" "change" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/change" nil nil)
                       ("blur" "${1:obj}.blur(function (${2:e}) {\n	${0:// event handler}\n});" "blur" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/blur" nil nil)
                       ("bind" "${1:obj}.bind('${2:event name}', function (${3:e}) {\n	${0:// event handler}\n});" "bind" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/bind" nil nil)
                       ("before" "${1:obj}.before('${2:Some text <b>and bold!</b>}')" "before" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/before" nil nil)
                       ("attrm" "${1:obj}.attr({'${2:attr1}': '${3:value1}', '${4:attr2}': '${5:value2}'})" "attrm" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/attrm" nil nil)
                       ("attr" "${1:obj}.attr('${2:attribute}', '${3:value}')" "attr" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/attr" nil nil)
                       ("appendTo" "${1:obj}.appendTo('${2:selector expression}')" "appendTo" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/appendTo" nil nil)
                       ("append" "${1:obj}.append('${2:Some text <b>and bold!</b>}')" "append" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/append" nil nil)
                       ("animate" "${1:obj}.animate({${2:param1: value1, param2: value2}}, ${3:speed})" "animate" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/animate" nil nil)
                       ("andself" "${1:obj}.andSelf()" "andself" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/andself" nil nil)
                       ("ajaxsuccess" "$.ajaxSuccess(function (${1:e}, xhr, settings) {\n	${2:// handler for when any AJAX call is successfully completed};\n});\n$0" "ajaxsuccess" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/ajaxsuccess" nil nil)
                       ("ajaxstop" "$.ajaxStop(function () {\n	${1:// handler for when all AJAX calls have been completed};\n});\n$0" "ajaxstop" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/ajaxstop" nil nil)
                       ("ajaxstart" "$.ajaxStart(function () {\n	${1:// handler for when an AJAX call is started and no other AJAX calls are in progress};\n});\n$0" "ajaxstart" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/ajaxstart" nil nil)
                       ("ajaxsetup" "$.ajaxSetup({\n	url: \"${1:mydomain.com/url}\",\n	type: \"${2:POST}\",\n	dataType: \"${3:xml/html/script/json}\",\n	data: $.param( $(\"${4:Element or Expression}\") ),\n	complete: function (jqXHR, textStatus) {\n		${5:// callback}\n	},\n	success: function (data, textStatus, jqXHR) {\n		${6:// success callback}\n	},\n	error: function (jqXHR, textStatus, errorThrown) {\n		${0:// error callback}\n	}\n});" "ajaxsetup" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/ajaxsetup" nil nil)
                       ("ajaxsend" "${1:obj}.ajaxSend(function (${1:request, settings}) {\n	${2:// error callback}\n});\n$0" "ajaxsend" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/ajaxsend" nil nil)
                       ("ajaxprefilter" "$.ajaxPrefilter(function (${1:options}, ${2:originalOptions}, jqXHR) {\n	${0: // Modify options, control originalOptions, store jqXHR, etc}\n});" "ajaxprefilter" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/ajaxprefilter" nil nil)
                       ("ajaxpost" "$.post('${1:mydomain.com/url}',\n	${2:{ param1: value1 },}\n	function (data, textStatus, jqXHR) {\n		${0:// success callback}\n	}\n);" "ajaxpost" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/ajaxpost" nil nil)
                       ("ajaxget" "$.get('${1:mydomain.com/url}',\n	${2:{ param1: value1 },}\n	function (data, textStatus, jqXHR) {\n		${0:// success callback}\n	}\n);" "ajaxget" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/ajaxget" nil nil)
                       ("ajaxerror" "${1:obj}.ajaxError(function (${1:e}, xhr, settings, thrownError) {\n	${2:// error callback}\n});\n$0" "ajaxerror" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/ajaxerror" nil nil)
                       ("ajaxcomplete" "${1:obj}.ajaxComplete(function (${1:e}, xhr, settings) {\n	${0:// callback}\n});" "ajaxcomplete" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/ajaxcomplete" nil nil)
                       ("ajax" "$.ajax({\n	url: '${1:mydomain.com/url}',\n	type: '${2:POST}',\n	dataType: '${3:xml/html/script/json}',\n	data: $.param( $('${4:Element or Expression}') ),\n	complete: function (jqXHR, textStatus) {\n		${5:// callback}\n	},\n	success: function (data, textStatus, jqXHR) {\n		${6:// success callback}\n	},\n	error: function (jqXHR, textStatus, errorThrown) {\n		${0:// error callback}\n	}\n});" "ajax" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/ajax" nil nil)
                       ("after" "${1:obj}.after('${2:Some text <b>and bold!</b>}')" "after" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/after" nil nil)
                       ("addClass" "${1:obj}.addClass('${2:class name}')" "addClass" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/addClass" nil nil)
                       ("add" "${1:obj}.add('${2:selector expression}')" "add" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/add" nil nil)
                       ("Dwhen" "$.when(${1:deferreds})" "Dwhen" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Dwhen" nil nil)
                       ("Dthen" "${1:deferred}.then(${2:doneCallbacks}, ${3:failCallbacks}, ${4:progressCallbacks})" "Dthen" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Dthen" nil nil)
                       ("Dstate" "${1:deferred}.state()" "Dstate" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Dstate" nil nil)
                       ("Dresw" "${1:deferred}.resolveWith(${2:this}, ${3:args})" "Dresw" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Dresw" nil nil)
                       ("Dres" "${1:deferred}.resolve(${2:args})" "Dres" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Dres" nil nil)
                       ("Drejw" "${1:deferred}.rejectWith(${2:this}, ${3:args})" "Drejw" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Drejw" nil nil)
                       ("Drej" "${1:deferred}.reject(${2:args})" "Drej" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Drej" nil nil)
                       ("Dprom" "${1:deferred}.promise(${2:target})" "Dprom" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Dprom" nil nil)
                       ("Dprog" "${1:deferred}.progress(${2:callbacks})" "Dprog" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Dprog" nil nil)
                       ("Dpipe" "${1:deferred}.then(${2:doneFilter}, ${3:failFilter}, ${4:progressFilter})" "Dpipe" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Dpipe" nil nil)
                       ("Dnotifyw" "${1:deferred}.notifyWith(${2:this}, ${3:args})" "Dnotifyw" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Dnotifyw" nil nil)
                       ("Dnotify" "${1:deferred}.notify(${2:args})" "Dnotify" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Dnotify" nil nil)
                       ("Disres" "${1:deferred}.isResolved()" "Disres" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Disres" nil nil)
                       ("Disrej" "${1:deferred}.isRejected()" "Disrej" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Disrej" nil nil)
                       ("Dfail" "${1:deferred}.fail(${2:callbacks})" "Dfail" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Dfail" nil nil)
                       ("Ddone" "${1:deferred}.done(${2:callbacks})" "Ddone" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Ddone" nil nil)
                       ("Dalways" "${1:deferred}.always(${2:callbacks})" "Dalways" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Dalways" nil nil)
                       ("D" "$.Deferred()" "D" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/D" nil nil)
                       ("Crem" "${1:callbacks}.remove(${2:callbacks})" "Crem" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Crem" nil nil)
                       ("Clocked" "${1:callbacks}.locked()" "Clocked" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Clocked" nil nil)
                       ("Clock" "${1:callbacks}.lock()" "Clock" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Clock" nil nil)
                       ("Chas" "${1:callbacks}.has(${2:callback})" "Chas" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Chas" nil nil)
                       ("Cfirew" "${1:callbacks}.fireWith(${2:this}, ${3:args})" "Cfirew" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Cfirew" nil nil)
                       ("Cfired" "${1:callbacks}.fired()" "Cfired" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Cfired" nil nil)
                       ("Cfire" "${1:callbacks}.fire(${2:args})" "Cfire" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Cfire" nil nil)
                       ("Cempty" "${1:callbacks}.empty()" "Cempty" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Cempty" nil nil)
                       ("Cdis" "${1:callbacks}.disable()" "Cdis" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Cdis" nil nil)
                       ("Cadd" "${1:callbacks}.add(${2:callbacks})" "Cadd" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/Cadd" nil nil)
                       ("C" "$.Callbacks()" "C" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/C" nil nil)
                       ("$type" "$.type(${1:obj})" "$type" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/$type" nil nil)
                       ("$trim" "$.trim(${1:str})" "$trim" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/javascript-jquery-mode/$trim" nil nil)))


;;; Do not edit! File generated at Sun Oct 25 17:07:30 2015
