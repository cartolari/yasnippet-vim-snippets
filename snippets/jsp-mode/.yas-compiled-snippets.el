;;; Compiled snippets and support files for `jsp-mode'
;;; Snippet definitions:
;;;
(yas-define-snippets 'jsp-mode
                     '(("uc" "${fn:toUpperCase(${0:string})}" "uc" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/uc" nil nil)
                       ("trim" "${fn:trim(${0:string})}" "trim" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/trim" nil nil)
                       ("substr:b" "${fn:substringBefore(${1:string}, ${0:substr})}" "substr:b" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/substr_b" nil nil)
                       ("substr:a" "${fn:substringAfter(${1:string}, ${0:substr})}" "substr:a" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/substr_a" nil nil)
                       ("substr" "${fn:substring(${1:string}, ${2:begin}, ${0:end})}" "substr" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/substr" nil nil)
                       ("startswith" "${fn:startsWith(${1:string}, ${0:prefix})}" "startswith" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/startswith" nil nil)
                       ("split" "${fn:split(${1:string}, ${0:delims})}" "split" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/split" nil nil)
                       ("replace" "${fn:replace(${1:string}, ${2:substr}, ${0:replace})}" "replace" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/replace" nil nil)
                       ("length" "${fn:length(${0:collection_or_string})}" "length" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/length" nil nil)
                       ("lc" "${fn:toLowerCase(${0:string})}" "lc" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/lc" nil nil)
                       ("jstl:fn" "<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>" "jstl:fn" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/jstl_fn" nil nil)
                       ("jstl:c" "<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>" "jstl:c" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/jstl_c" nil nil)
                       ("jstl" "<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>" "jstl" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/jstl" nil nil)
                       ("join" "${fn:join(${1:collection}, ${0:delims})}" "join" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/join" nil nil)
                       ("indexof" "${fn:indexOf(${1:string}, ${0:substr})}" "indexof" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/indexof" nil nil)
                       ("escape" "${fn:escapeXml(${0:string})}" "escape" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/escape" nil nil)
                       ("endswith" "${fn:endsWith(${1:string}, ${0:suffix})}" "endswith" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/endswith" nil nil)
                       ("cwhen" "<c:when test=\"${$1}\">\n  $0\n</c:when>" "cwhen" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/cwhen" nil nil)
                       ("curl+" "<c:url value=\"$1\" var=\"$2\">\n  <c:param name=\"$4\" value=\"$5\" />\n  cparam+$0\n</c:url>\n<a href=\"${$2}\">$3</a>" "curl+" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/curl+" nil nil)
                       ("curl" "<c:url value=\"$1\" var=\"$2\" />\n<a href=\"${$2}\">$0</a>" "curl" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/curl" nil nil)
                       ("cset" "<c:set var=\"$1\" value=\"$0\" />" "cset" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/cset" nil nil)
                       ("cremove" "<c:remove var=\"$1\" scope=\"${0:page}\" />" "cremove" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/cremove" nil nil)
                       ("credirect" "<c:redirect url=\"$0\" />" "credirect" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/credirect" nil nil)
                       ("cpath" "${pageContext.request.contextPath}" "cpath" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/cpath" nil nil)
                       ("cparam+" "<c:param name=\"$1\" value=\"$2\" />\ncparam+$0" "cparam+" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/cparam+" nil nil)
                       ("cparam" "<c:param name=\"$1\" value=\"$0\" />" "cparam" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/cparam" nil nil)
                       ("cout" "<c:out value=\"$1\" default=\"$0\" />" "cout" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/cout" nil nil)
                       ("cother" "<c:otherwise>\n  $0\n</c:otherwise>" "cother" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/cother" nil nil)
                       ("contains:i" "${fn:containsIgnoreCase(${1:string}, ${0:substr})}" "contains:i" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/contains_i" nil nil)
                       ("contains" "${fn:contains(${1:string}, ${0:substr})}" "contains" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/contains" nil nil)
                       ("cimport+" "<c:import url=\"$1\">\n  <c:param name=\"$2\" value=\"$3\" />\n  cparam+$0\n</c:import>" "cimport+" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/cimport+" nil nil)
                       ("cimport" "<c:import url=\"$1\" />" "cimport" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/cimport" nil nil)
                       ("cif" "<c:if test=\"${$1}\">\n  $0\n</c:if>" "cif" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/cif" nil nil)
                       ("cfort" "<c:set var=\"$1\">${2:item1,item2,item3}</c:set>\n<c:forTokens var=\"$3\" items=\"${$1}\" delims=\"${4:,}\">\n  ${0:<c:out value=\"$3\" />}\n</c:forTokens>" "cfort" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/cfort" nil nil)
                       ("cfore" "<c:forEach items=\"${$1}\" var=\"$2\" varStatus=\"$3\">\n  ${0:<c:out value=\"$2\" />}\n</c:forEach>" "cfore" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/cfore" nil nil)
                       ("cchoose" "<c:choose>\n  $0\n</c:choose>" "cchoose" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/cchoose" nil nil)
                       ("ccatch" "<c:catch var=\"$0\" />" "ccatch" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/ccatch" nil nil)
                       ("@page" "<%@page contentType=\"text/html\" pageEncoding=\"UTF-8\"%>" "@page" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/jsp-mode/@page" nil nil)))


;;; Do not edit! File generated at Mon May  8 02:40:51 2017
