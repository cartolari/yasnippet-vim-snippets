;;; Compiled snippets and support files for `yii-mode'
;;; Snippet definitions:
;;;
(yas-define-snippets 'yii-mode
                     '(("yuserip" "YYii::app()->request->userHostAddress\n" "yuserip" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yuserip" nil nil)
                       ("yuser" "Yii::app()->user->\n" "yuser" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yuser" nil nil)
                       ("yupdatebp" "${1:ModelName}::model()->updateByPk(${2:pk}, ${3:array('attributes')}, ${4:condition},array('${5:key}'=>${0:value}));\n" "yupdatebp" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yupdatebp" nil nil)
                       ("yupdatea" "${1:ModelName}::model()->updateAll(${2:array('attributes')}, ${3:condition},array('${4:key}'=>${0:value}));\n" "yupdatea" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yupdatea" nil nil)
                       ("ytrace" "Yii::trace('${0:msg}');\n" "ytrace" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/ytrace" nil nil)
                       ("yt" "Yii::t('${1:category}', '${2:message}',array($0));\n" "yt" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yt" nil nil)
                       ("yse" "Yii::app()->session['$0'];\n" "yse" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yse" nil nil)
                       ("yrt" "$this->renderText('$0');\n" "yrt" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yrt" nil nil)
                       ("yrp" "$this->renderPartial('${1:view}',array('${2:key}'=>${0:value}));\n" "yrp" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yrp" nil nil)
                       ("yrf" "$this->refresh();\n" "yrf" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yrf" nil nil)
                       ("yreqtype" "Yii::app()->request->requestType\n" "yreqtype" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yreqtype" nil nil)
                       ("yregsf" "Yii::app()->clientScript->registerScriptFile('${1:scriptUrl}', CClientScript::POS_${0:END});\n" "yregsf" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yregsf" nil nil)
                       ("yregs" "Yii::app()->clientScript->registerScript('${1:id}', '$2', CClientScript::POS_${0:READY});\n" "yregs" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yregs" nil nil)
                       ("yregcf" "Yii::app()->clientScript->registerCssFile('${0:file}');\n" "yregcf" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yregcf" nil nil)
                       ("yregc" "Yii::app()->clientScript->registerCss('${1:id}', '$0');\n" "yregc" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yregc" nil nil)
                       ("yre" "$this->redirect(array('${1:controller}/${0:action}'));\n" "yre" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yre" nil nil)
                       ("yrdi" "$this->renderDynamic('${1:callback}', array('${2:key}'=>${0:value}));\n" "yrdi" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yrdi" nil nil)
                       ("yrd" "$this->renderDynamic('${0:callback}');\n" "yrd" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yrd" nil nil)
                       ("yr" "$this->render('${1:view}',array('${2:key}'=>${0:value}));\n" "yr" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yr" nil nil)
                       ("ypar" "Yii::app()->params['$0']\n" "ypar" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/ypar" nil nil)
                       ("ymodel" "<?php\n\nclass ${1:ModelName} extends ${2:CActiveRecord}\n{\n  /**\n   * Returns the static model of the specified AR class.\n   * @return CActiveRecord the static model class\n   */\n  public static function model($className=__CLASS__)\n  {\n  	return parent::model($className);\n  }\n\n  /**\n   * @return string the associated database table name\n   */\n  public function tableName()\n  {\n  	return '${0:table_name}';\n  }\n\n  /**\n   * @return array validation rules for model attributes.\n   */\n  public function rules()\n  {\n  	return array(\n  	);\n  }\n\n  /**\n   * @return array relational rules.\n   */\n  public function relations()\n  {\n  	return array(\n  	);\n  }\n\n  /**\n   * @return array customized attribute labels (name=&gt;label)\n   */\n  public function attributeLabels()\n  {\n  	return array(\n  	);\n  }\n}\n\n" "ymodel" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/ymodel" nil nil)
                       ("ylog" "Yii::log('${1:msg}', '${0:info}');\n" "ylog" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/ylog" nil nil)
                       ("ylinkpager" "$this->widget('CLinkPager', array('pages'=>$pages,'header'=>'$0'}))\n" "ylinkpager" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/ylinkpager" nil nil)
                       ("yjec" "CJSON::encode(${0:text});\n" "yjec" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yjec" nil nil)
                       ("yispost" "Yii::app()->request->isPostRequest\n" "yispost" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yispost" nil nil)
                       ("yisajax" "Yii::app()->request->isAjaxRequest\n" "yisajax" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yisajax" nil nil)
                       ("yimp" "Yii::import('$0');\n" "yimp" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yimp" nil nil)
                       ("yifisajax" "if(Yii::app()->request->isAjaxRequest == TRUE)\n{\n  $0\n}\n" "yifisajax" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yifisajax" nil nil)
                       ("yfindbs" "${1:ModelName}::model()->findBySql(${2:sql}, array('${3:key}'=>${0:value}));\n" "yfindbs" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yfindbs" nil nil)
                       ("yfindbp" "${1:ModelName}::model()->findByPk(${2:pk}, ${3:condition}, array('${4:key}'=>${0:value}));\n" "yfindbp" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yfindbp" nil nil)
                       ("yfindabp" "${1:ModelName}::model()->findAllByPk(${2:pk}, ${3:condition},array('${4:key}'=>${0:value}));\n" "yfindabp" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yfindabp" nil nil)
                       ("yfindaba" "${1:ModelName}::model()->findAllByAttributes(array('${2:attributeName}'=>${3:attributeValue}), ${4:condition}, array('${5:key}'=>${0:value}));\n" "yfindaba" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yfindaba" nil nil)
                       ("yfinda" "${1:ModelName}::model()->findAll(${2:condition},array('${3:key}'=>${0:value}));\n" "yfinda" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yfinda" nil nil)
                       ("yfind" "${1:ModelName}::model()->find(${2:condition},array('${3:key}'=>${0:value}));\n" "yfind" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yfind" nil nil)
                       ("yexists" "${1:ModelName}::model()->exists(${2:condition}, array('${3:key}'=>${0:value}));\n" "yexists" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yexists" nil nil)
                       ("ydelcache" "Yii::app()->cache->delete('${0:key}');\n" "ydelcache" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/ydelcache" nil nil)
                       ("ydelbp" "${1:ModelName}::model()->deleteByPk(${2:pk}, ${3:condition}, array('${4:key}'=>${0:value}));\n" "ydelbp" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/ydelbp" nil nil)
                       ("ydela" "${1:ModelName}::model()->deleteAll(${2:condition},array('${3:key}'=>${0:value}));\n" "ydela" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/ydela" nil nil)
                       ("ycountm" "${1:ModelName}::model()->count(${2:condition}, array('${3:key}'=>${0:value}));\n" "ycountm" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/ycountm" nil nil)
                       ("ycountbs" "${1:ModelName}::model()->countBySql(${2:sql},array('${3:key}'=>${0:value}));\n" "ycountbs" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/ycountbs" nil nil)
                       ("ycontroller" "<?php\n\n/**\n * ${1:}\n */\nclass ${2:Site}Controller extends ${3:CController}\n{\n    public function action${4:Index}()\n    {\n        $0\n    }\n\n  // -----------------------------------------------------------\n  // Uncomment the following methods and override them if needed\n  /*\n  public function filters()\n  {\n  	// return the filter configuration for this controller, e.g.:\n  	return array(\n  		'inlineFilterName',\n  		array(\n  			'class'=>'path.to.FilterClass',\n  			'propertyName'=>'propertyValue',\n  		),\n  	);\n  }\n\n  public function actions()\n  {\n  	// return external action classes, e.g.:\n  	return array(\n  		'action1'=>'path.to.ActionClass',\n  		'action2'=>array(\n  			'class'=>'path.to.AnotherActionClass',\n  			'propertyName'=>'propertyValue',\n  		),\n  	);\n  }\n  */\n}\n" "ycontroller" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/ycontroller" nil nil)
                       ("yco" "Yii::app()->request->cookies['$0']\n" "yco" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yco" nil nil)
                       ("ycas" "Yii::app()->cache->set('${1:key}', ${2:value}, ${3:expire}, new C${4:}CacheDependency($0));\n" "ycas" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/ycas" nil nil)
                       ("ycag" "Yii::app()->cache->get('${0:key}');\n" "ycag" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/ycag" nil nil)
                       ("ycaf" "Yii::app()->cache->flush();\n" "ycaf" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/ycaf" nil nil)
                       ("ycad" "Yii::app()->cache->add('${1:key}', ${2:value}, ${3:expire}, new C$4CacheDependency($0));\n" "ycad" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/ycad" nil nil)
                       ("yadp" "$dataProvider = new CActiveDataProvider('$1', array(\n  'criteria' => array(\n  	'condition' => '$2',\n  	'order' => '$3',\n  	'with' => array('$4')\n  ),\n//'pagination' => false,\n  'pagination' => array(\n  	'pageSize'=>$5,\n  ),\n));\n$0\n// $dataProvider->getData() will return a list of Post objects\n" "yadp" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yadp" nil nil)
                       ("yact" "public function action${1:Index}(${2:params})\n{\n  $0\n}\n\n" "yact" nil nil nil "/home/bruno/code/yasnippet-vim-snippets/snippets/yii-mode/yact" nil nil)))


;;; Do not edit! File generated at Mon May  8 02:40:53 2017
